// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProFinder.Infrastructure.Data;

namespace ProFinder.Infrastructure.Migrations
{
    [DbContext(typeof(ProFinderContext))]
    [Migration("20190812165637_UpdDb")]
    partial class UpdDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProFinder.Core.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BusinessDays");

                    b.Property<string>("BusinessHours");

                    b.Property<int>("CompanyTypeId");

                    b.Property<decimal>("CostPerHour");

                    b.Property<string>("Description");

                    b.Property<DateTime>("FoundedDate");

                    b.Property<string>("ImageUrl");

                    b.Property<string>("Name");

                    b.Property<int>("NumberOfEmployees");

                    b.HasKey("Id");

                    b.HasIndex("CompanyTypeId");

                    b.ToTable("Company");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BusinessDays = "Mon - Fry",
                            BusinessHours = "9:00 a.m. to 5:00 p.m.",
                            CompanyTypeId = 4,
                            CostPerHour = 80.00m,
                            Description = "Repairs, installation, maintenance, assembly and Painting",
                            FoundedDate = new DateTime(2015, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "http://placeimg.com/200/200/any",
                            Name = "Fix it",
                            NumberOfEmployees = 10
                        },
                        new
                        {
                            Id = 2,
                            BusinessDays = "Mon - Sat",
                            BusinessHours = "8:00 a.m. to 7:00 p.m.",
                            CompanyTypeId = 4,
                            CostPerHour = 110.00m,
                            Description = "General construction services and repairs, design and maintenance",
                            FoundedDate = new DateTime(1990, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "http://placeimg.com/200/200/any",
                            Name = "Handyman services",
                            NumberOfEmployees = 50
                        },
                        new
                        {
                            Id = 3,
                            BusinessDays = "Mon - Sat",
                            BusinessHours = "9:00 a.m. to 6:00 p.m.",
                            CompanyTypeId = 4,
                            CostPerHour = 55.00m,
                            Description = "Well prepared staff of handyman and the right resources to do a great work",
                            FoundedDate = new DateTime(2012, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "http://placeimg.com/200/200/any",
                            Name = "Fast repair",
                            NumberOfEmployees = 8
                        },
                        new
                        {
                            Id = 4,
                            BusinessDays = "Mon - Fry",
                            BusinessHours = "8:00 a.m. to 5:00 p.m.",
                            CompanyTypeId = 4,
                            CostPerHour = 39.00m,
                            Description = "Our service is efficient, professional and low cost",
                            FoundedDate = new DateTime(2018, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "http://placeimg.com/200/200/any",
                            Name = "Home improvement",
                            NumberOfEmployees = 5
                        },
                        new
                        {
                            Id = 5,
                            BusinessDays = "Daily",
                            BusinessHours = "6:00 a.m. to 4:00 p.m.",
                            CompanyTypeId = 3,
                            CostPerHour = 35.00m,
                            Description = "Best cleaning service in town",
                            FoundedDate = new DateTime(2005, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "http://placeimg.com/200/200/any",
                            Name = "Cleaning pros",
                            NumberOfEmployees = 4
                        },
                        new
                        {
                            Id = 6,
                            BusinessDays = "Mon - Fry",
                            BusinessHours = "7:00 a.m. to 9:00 p.m",
                            CompanyTypeId = 3,
                            CostPerHour = 25.00m,
                            Description = "Experience in Cleaning Houses, Apartments, Hotels, Offices, Whorehouse, Moving, packing and unpacking, organization Houses",
                            FoundedDate = new DateTime(2010, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "http://placeimg.com/200/200/any",
                            Name = "Cleaning services",
                            NumberOfEmployees = 2
                        },
                        new
                        {
                            Id = 7,
                            BusinessDays = "Mon - Fry",
                            BusinessHours = "7:00 a.m. to 6:00 p.m.",
                            CompanyTypeId = 3,
                            CostPerHour = 70.00m,
                            Description = "We has more than a decade of experience providing high quality residential and commercial cleaning services",
                            FoundedDate = new DateTime(2007, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "http://placeimg.com/200/200/any",
                            Name = "Dedicated cleaning",
                            NumberOfEmployees = 25
                        },
                        new
                        {
                            Id = 8,
                            BusinessDays = "Daily",
                            BusinessHours = "8:00 a.m. to 5:00 p.m.",
                            CompanyTypeId = 3,
                            CostPerHour = 30.00m,
                            Description = "We take great pride in our attention to health and safety, staying up to date with regular training in the latest cleaning agents and methods",
                            FoundedDate = new DateTime(2015, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "http://placeimg.com/200/200/any",
                            Name = "Alpha cleaners",
                            NumberOfEmployees = 10
                        },
                        new
                        {
                            Id = 9,
                            BusinessDays = "Daily",
                            BusinessHours = "8:00 a.m. to 5:00 p.m.",
                            CompanyTypeId = 3,
                            CostPerHour = 60.00m,
                            Description = "If you’re in need of home cleaning, apartment cleaning, or a maid service, we’re simply your best option and most convenient home cleaning service out there",
                            FoundedDate = new DateTime(2016, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "http://placeimg.com/200/200/any",
                            Name = "Clean solutions",
                            NumberOfEmployees = 15
                        },
                        new
                        {
                            Id = 10,
                            BusinessDays = "Mon - Fry",
                            BusinessHours = "9:00 a.m. to 5:00 p.m.",
                            CompanyTypeId = 2,
                            CostPerHour = 45.00m,
                            Description = "We are fast, reliable, certified and Affordable",
                            FoundedDate = new DateTime(2015, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "http://placeimg.com/200/200/any",
                            Name = "Tech experts",
                            NumberOfEmployees = 4
                        },
                        new
                        {
                            Id = 11,
                            BusinessDays = "Mon - Fry",
                            BusinessHours = "9:00 a.m. to 5:00 p.m.",
                            CompanyTypeId = 2,
                            CostPerHour = 40.00m,
                            Description = "Having problems with your PC, or any other I.T. related matter? Our technicians specialize in I.T.services",
                            FoundedDate = new DateTime(2017, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "http://placeimg.com/200/200/any",
                            Name = "IT solutions",
                            NumberOfEmployees = 3
                        },
                        new
                        {
                            Id = 12,
                            BusinessDays = "Mon - Fry",
                            BusinessHours = "9:00 a.m. to 5:00 p.m.",
                            CompanyTypeId = 2,
                            CostPerHour = 40.00m,
                            Description = "We help clients with ease when they think the world is about to end since their computer is not working right",
                            FoundedDate = new DateTime(2018, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "http://placeimg.com/200/200/any",
                            Name = "Fast computer repair",
                            NumberOfEmployees = 2
                        },
                        new
                        {
                            Id = 13,
                            BusinessDays = "Daily",
                            BusinessHours = "9:00 a.m. to 6:00 p.m.",
                            CompanyTypeId = 1,
                            CostPerHour = 25.00m,
                            Description = "I’m reliable and responsible. I take care of every animal as if it were my own.",
                            FoundedDate = new DateTime(2017, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "http://placeimg.com/200/200/any",
                            Name = "JD pet services",
                            NumberOfEmployees = 1
                        },
                        new
                        {
                            Id = 14,
                            BusinessDays = "Daily",
                            BusinessHours = "9:00 a.m. to 6:00 p.m.",
                            CompanyTypeId = 1,
                            CostPerHour = 35.00m,
                            Description = "Treat your dog or cat to a mobile pet grooming experience like no other.",
                            FoundedDate = new DateTime(2018, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "http://placeimg.com/200/200/any",
                            Name = "Pet care",
                            NumberOfEmployees = 5
                        },
                        new
                        {
                            Id = 15,
                            BusinessDays = "Daily",
                            BusinessHours = "9:00 a.m. to 6:00 p.m.",
                            CompanyTypeId = 1,
                            CostPerHour = 30.00m,
                            Description = "Professional pet sitter",
                            FoundedDate = new DateTime(2016, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ImageUrl = "http://placeimg.com/200/200/any",
                            Name = "Pet lovers",
                            NumberOfEmployees = 2
                        });
                });

            modelBuilder.Entity("ProFinder.Core.Entities.CompanyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("CompanyType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Pet sitting"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Computer repair"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Cleaners"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Handyman"
                        });
                });

            modelBuilder.Entity("ProFinder.Core.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<int>("ExternalId");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.HasKey("Id");

                    b.HasIndex("ExternalId")
                        .IsUnique();

                    b.ToTable("Customer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "jmiller@email.com",
                            ExternalId = 1,
                            FirstName = "John",
                            LastName = "Miller"
                        },
                        new
                        {
                            Id = 2,
                            Email = "mdavis@email.com",
                            ExternalId = 2,
                            FirstName = "Michael",
                            LastName = "Davis"
                        },
                        new
                        {
                            Id = 3,
                            Email = "swilson@email.com",
                            ExternalId = 3,
                            FirstName = "Sophia",
                            LastName = "Wilson"
                        },
                        new
                        {
                            Id = 4,
                            Email = "ljones@email.com",
                            ExternalId = 4,
                            FirstName = "Liam",
                            LastName = "Jones"
                        },
                        new
                        {
                            Id = 5,
                            Email = "ebrown@email.com",
                            ExternalId = 5,
                            FirstName = "Emily",
                            LastName = "Brown"
                        });
                });

            modelBuilder.Entity("ProFinder.Core.Entities.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment");

                    b.Property<int>("CompanyId");

                    b.Property<int>("CustomerId");

                    b.Property<DateTime>("Date");

                    b.Property<int>("Rating");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Review");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Comment = "Excelent service!",
                            CompanyId = 1,
                            CustomerId = 1,
                            Date = new DateTime(2019, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 5
                        },
                        new
                        {
                            Id = 2,
                            Comment = "Good service!",
                            CompanyId = 1,
                            CustomerId = 2,
                            Date = new DateTime(2019, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 4
                        },
                        new
                        {
                            Id = 3,
                            Comment = "Awesome service!",
                            CompanyId = 1,
                            CustomerId = 3,
                            Date = new DateTime(2019, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 5
                        },
                        new
                        {
                            Id = 4,
                            Comment = "Nice service!",
                            CompanyId = 1,
                            CustomerId = 4,
                            Date = new DateTime(2019, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 4
                        },
                        new
                        {
                            Id = 5,
                            Comment = "Regular service",
                            CompanyId = 1,
                            CustomerId = 5,
                            Date = new DateTime(2019, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 2
                        },
                        new
                        {
                            Id = 6,
                            Comment = "Regular service",
                            CompanyId = 2,
                            CustomerId = 2,
                            Date = new DateTime(2019, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 4
                        },
                        new
                        {
                            Id = 7,
                            Comment = "Not recommended.",
                            CompanyId = 2,
                            CustomerId = 3,
                            Date = new DateTime(2019, 1, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 5
                        },
                        new
                        {
                            Id = 8,
                            Comment = "Bad service",
                            CompanyId = 2,
                            CustomerId = 4,
                            Date = new DateTime(2019, 5, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 4
                        },
                        new
                        {
                            Id = 9,
                            Comment = "Regular service",
                            CompanyId = 2,
                            CustomerId = 5,
                            Date = new DateTime(2019, 2, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 2
                        },
                        new
                        {
                            Id = 10,
                            Comment = "Excelent service!",
                            CompanyId = 7,
                            CustomerId = 1,
                            Date = new DateTime(2019, 1, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 5
                        },
                        new
                        {
                            Id = 11,
                            Comment = "Good service!",
                            CompanyId = 7,
                            CustomerId = 2,
                            Date = new DateTime(2019, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 4
                        },
                        new
                        {
                            Id = 12,
                            Comment = "Awesome service!",
                            CompanyId = 7,
                            CustomerId = 3,
                            Date = new DateTime(2019, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 4
                        },
                        new
                        {
                            Id = 13,
                            Comment = "Excelent service!",
                            CompanyId = 12,
                            CustomerId = 4,
                            Date = new DateTime(2019, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 4
                        },
                        new
                        {
                            Id = 14,
                            Comment = "Fast and good service!",
                            CompanyId = 12,
                            CustomerId = 5,
                            Date = new DateTime(2019, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 4
                        },
                        new
                        {
                            Id = 15,
                            Comment = "Good service!",
                            CompanyId = 15,
                            CustomerId = 1,
                            Date = new DateTime(2019, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 4
                        });
                });

            modelBuilder.Entity("ProFinder.Core.Entities.Company", b =>
                {
                    b.HasOne("ProFinder.Core.Entities.CompanyType", "CompanyType")
                        .WithMany("Companies")
                        .HasForeignKey("CompanyTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProFinder.Core.Entities.Review", b =>
                {
                    b.HasOne("ProFinder.Core.Entities.Company", "Company")
                        .WithMany("Reviews")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProFinder.Core.Entities.Customer", "Customer")
                        .WithMany("Reviews")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
